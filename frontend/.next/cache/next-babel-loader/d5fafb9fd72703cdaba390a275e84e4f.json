{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ethan/Sites/wpx/wesbos-hooks/frontend/components/Signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { useState } from \"react\";\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n      signup (email: $email, name: $name, password: $password) {\n        id\n        name\n        email\n        password\n  }\n  }\n`;\n\nconst Signup = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(_objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  return __jsx(Mutation, {\n    mutation: SIGNUP_MUTATION,\n    variables: state,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, (signup, {\n    error,\n    loading\n  }) => {\n    if (error) return __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n    return __jsx(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await signup();\n        await setState({\n          name: \"\",\n          email: \"\",\n          password: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"fieldset\", {\n      method: \"post\",\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign Up for an Account\"), __jsx(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Email\", __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      autoComplete: \"off\",\n      value: state.email,\n      onChange: e => handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Name\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\",\n      autoComplete: \"off\",\n      value: state.name,\n      onChange: e => handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      autoComplete: \"off\",\n      value: state.password,\n      onChange: e => handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Sign up!\")));\n  });\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/ethan/Sites/wpx/wesbos-hooks/frontend/components/Signup.js"],"names":["Mutation","gql","Form","Error","useState","CURRENT_USER_QUERY","SIGNUP_MUTATION","Signup","props","state","setState","name","email","password","handleChange","e","value","target","query","signup","error","loading","preventDefault"],"mappings":"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","sourcesContent":["import { Mutation } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport Form from \"./styles/Form\"\nimport Error from \"./ErrorMessage\"\nimport { useState } from \"react\"\nimport { CURRENT_USER_QUERY } from './User'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n      signup (email: $email, name: $name, password: $password) {\n        id\n        name\n        email\n        password\n  }\n  }\n`\n\n\n\nconst Signup = props => {\n  const [state, setState] = useState({name: \"\", email: \"\", password: \"\"})\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value\n    })\n  }\n\n  return (\n    <Mutation\n      mutation={SIGNUP_MUTATION}\n      variables={state}\n      refetchQueries={[{query: CURRENT_USER_QUERY}]}\n    >\n      {(signup, { error, loading }) => {\n        if (error) return <Error error={error} />\n\n        return (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault()\n              await signup()\n              await setState({name: \"\", email: \"\", password: \"\"})\n            }}\n          >\n            <fieldset method=\"post\" disabled={loading} aria-busy={loading}>\n              <h2>Sign Up for an Account</h2>\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  autoComplete=\"off\"\n                  value={state.email}\n                  onChange={e => handleChange(e)}\n                />\n              </label>\n              <label htmlFor=\"name\">\n                Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  autoComplete=\"off\"\n                  value={state.name}\n                  onChange={e => handleChange(e)}\n                />\n              </label>\n              <label htmlFor=\"password\">\n                password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  autoComplete=\"off\"\n                  value={state.password}\n                  onChange={e => handleChange(e)}\n                />\n              </label>\n              <button type=\"submit\">Sign up!</button>\n            </fieldset>\n          </Form>\n        )\n      }}\n    </Mutation>\n  )\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}