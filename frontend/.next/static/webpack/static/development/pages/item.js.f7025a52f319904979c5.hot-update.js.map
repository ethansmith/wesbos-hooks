{"version":3,"file":"static/webpack/static/development/pages/item.js.f7025a52f319904979c5.hot-update.js","sources":["webpack:///./components/SingleItem.js"],"sourcesContent":["// import { Query } from \"react-apollo\"\n// import { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport { useQuery } from 'react-apollo';\nimport styled from 'styled-components';\nimport Error from './ErrorMessage';\n\nconst SingleItemStyles = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  box-shadow: ${props => props.theme.bs};\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 3rem;\n    font-size: 2rem;\n  }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst SingleItem = props => {\n  const { error, loading, data } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: { id: props.id },\n  });\n\n  if (error) return <Error error={error} />;\n  if (loading) return <p>Loading...</p>;\n  if (!data.item) return <p>No Item Found for {props.id}</p>;\n  const { item } = data;\n\n  console.log(item);\n\n  console.log(process.browser);\n\n  return (\n    <SingleItemStyles>\n      <Head>\n        <title>Sick Fits | {item.title}</title>\n      </Head>\n      <img src={item.largeImage} alt={item.title} />\n      <div className=\"details\">\n        <h2>Viewing {item.title}</h2>\n        <p>{item.description}</p>\n      </div>\n    </SingleItemStyles>\n  );\n};\n\nexport default SingleItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAgBA;AACA;AAYA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}