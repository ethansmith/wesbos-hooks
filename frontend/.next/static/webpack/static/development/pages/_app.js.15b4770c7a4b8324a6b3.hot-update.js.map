{"version":3,"file":"static/webpack/static/development/pages/_app.js.15b4770c7a4b8324a6b3.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import ApolloClient from 'apollo-boost';\nimport withApollo from 'next-with-apollo';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\nimport { LOCAL_BACKEND_URL, PROD_BACKEND_URL } from '../config';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri:\n      process.env.NODE_ENV === 'production'\n        ? PROD_BACKEND_URL\n        : LOCAL_BACKEND_URL,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n\n            // write the cart state to the opposite\n\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n\n            cache.writeData(data);\n\n            return data;\n          },\n        },\n      },\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AAhBA;AADA;AAoBA;AACA;AADA;AArBA;AAdA;AAwCA;AACA;AACA;;;;A","sourceRoot":""}