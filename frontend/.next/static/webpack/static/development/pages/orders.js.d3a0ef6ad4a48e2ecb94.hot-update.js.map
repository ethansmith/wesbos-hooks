{"version":3,"file":"static/webpack/static\\development\\pages\\orders.js.d3a0ef6ad4a48e2ecb94.hot-update.js","sources":["webpack:///./components/PleaseSignIn.js","webpack:///./components/SignIn.js","webpack:///./components/styles/Form.js","webpack:///./pages/orders.js"],"sourcesContent":["import { Query } from \"react-apollo\"\r\nimport { CURRENT_USER_QUERY } from \"./User\"\r\nimport SignIn from \"./SignIn\"\r\n\r\nconst PleaseSignIn = props => (\r\n  <Query query={CURRENT_USER_QUERY}>\r\n    {({ error, loading, data }) => {\r\n      if (!data.me) {\r\n        return (\r\n          <>\r\n            <p>Please Sign In before continuing! </p>\r\n            <SignIn />\r\n          </>\r\n        )\r\n      }\r\n\r\n      return props.children\r\n    }}\r\n  </Query>\r\n)\r\n\r\nexport default PleaseSignIn\r\n","import { Mutation } from \"react-apollo\"\r\nimport gql from \"graphql-tag\"\r\nimport Form from \"./styles/Form\"\r\nimport Error from \"./ErrorMessage\"\r\nimport { useState } from \"react\"\r\nimport {CURRENT_USER_QUERY} from './User'\r\n\r\nconst SIGNIN_MUTATION = gql`\r\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\r\n    signin(email: $email, password: $password) {\r\n      email\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nconst SignIn = props => {\r\n  const [state, setState] = useState({ email: \"\", password: \"\" })\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Mutation \r\n        mutation={SIGNIN_MUTATION} \r\n        variables={state}\r\n        refetchQueries={[{query: CURRENT_USER_QUERY}]}\r\n        >\r\n      {(signin, { error, loading }) => {\r\n        if (error) return <Error error={error} />\r\n\r\n        return (\r\n          <Form\r\n            method=\"post\"\r\n            onSubmit={async e => {\r\n              e.preventDefault()\r\n              await signin()\r\n              await setState({ email: \"\", password: \"\" })\r\n            }}\r\n          >\r\n            <fieldset method=\"post\" disabled={loading} aria-busy={loading}>\r\n              <h2>Sign In to your Account</h2>\r\n              <label htmlFor=\"email\">\r\n                Email\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"email\"\r\n                  autoComplete=\"off\"\r\n                  value={state.email}\r\n                  onChange={e => handleChange(e)}\r\n                />\r\n              </label>\r\n\r\n              <label htmlFor=\"password\">\r\n                Password\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                  autoComplete=\"off\"\r\n                  value={state.password}\r\n                  onChange={e => handleChange(e)}\r\n                />\r\n              </label>\r\n              <button type=\"submit\">Sign in!</button>\r\n            </fieldset>\r\n          </Form>\r\n        )\r\n      }}\r\n    </Mutation>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\r\n  background: rgba(0, 0, 0, 0.02);\r\n  border: 5px solid white;\r\n  padding: 20px;\r\n  font-size: 1.5rem;\r\n  line-height: 1.5;\r\n  font-weight: 600;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 1rem;\r\n  }\r\n  input,\r\n  textarea,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    border: 1px solid black;\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: ${props => props.theme.red};\r\n    }\r\n  }\r\n  button,\r\n  input[type='submit'] {\r\n    width: auto;\r\n    background: red;\r\n    color: white;\r\n    border: 0;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    padding: 0.5rem 1.2rem;\r\n  }\r\n  fieldset {\r\n    border: 0;\r\n    padding: 0;\r\n\r\n    &[disabled] {\r\n      opacity: 0.5;\r\n    }\r\n    &::before {\r\n      height: 10px;\r\n      content: '';\r\n      display: block;\r\n      background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%);\r\n    }\r\n    &[aria-busy='true']::before {\r\n      background-size: 50% auto;\r\n      animation: ${loading} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Form;\r\n","import { Query } from \"react-apollo\"\r\nimport gql from \"graphql-tag\"\r\nimport User, { CURRENT_USER_QUERY } from \"../components/User\"\r\nimport PleaseSignIn from \"../components/PleaseSignIn\"\r\nimport OrdersList from \"../components/OrdersList\"\r\n\r\nconst ALL_ORDERS_QUERY = gql`\r\n  query ALL_ORDERS_QUERY($userID: ID!) {\r\n    orders(userId: $userId) {\r\n      id\r\n      items {\r\n        title\r\n        quantity\r\n        image\r\n        price\r\n      }\r\n      total\r\n      createdAt\r\n    }\r\n  }\r\n`\r\n\r\nconst Orders = props => (\r\n  <User>\r\n    {({ data, loading, error }) => (\r\n      <Query query={ALL_ORDERS_QUERY} variables={{ userId: data.me.id }}>\r\n        {({ poo, loading, error }) => {\r\n          console.log(\"data\", poo)\r\n          return (\r\n            <PleaseSignIn>\r\n              <OrdersList />\r\n            </PleaseSignIn>\r\n          )\r\n        }}\r\n      </Query>\r\n    )}\r\n  </User>\r\n)\r\n\r\nexport default Orders\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAbA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAEA;AAYA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AATA;AAFA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}