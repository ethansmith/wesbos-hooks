{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.199903c7e74ca23a9c1f.hot-update.js","sources":["webpack:///./components/AddToCart.js"],"sourcesContent":["// import { Mutation } from \"react-apollo\"\r\nimport { useMutation } from \"react-apollo-hooks\"\r\nimport gql from \"graphql-tag\"\r\nimport { CURRENT_USER_QUERY } from \"./User\"\r\n\r\nconst ADD_TO_CART_MUTATION = gql`\r\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\r\n    addToCart(id: $id) {\r\n      id\r\n      item {\r\n        description\r\n        id\r\n        image\r\n        price\r\n        title\r\n      }\r\n      quantity\r\n    }\r\n  }\r\n`\r\n\r\nconst AddToCart = props => {\r\n  const [addToCart, { error, loading, data }] = useMutation(\r\n    { ADD_TO_CART_MUTATION },\r\n    {\r\n      variables: {\r\n        id: props.id\r\n      }\r\n    },\r\n    { refetchQueries: [{ query: CURRENT_USER_QUERY }] },\r\n    { update: () => update }\r\n  )\r\n\r\n  const update = (cache, payload) => {\r\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY })\r\n\r\n    const cartItem = payload.data.addToCart\r\n\r\n    if (!data.me.cart.find(eachItem => eachItem.item.id === props.item.id)) {\r\n      cartItem.quantity = 1\r\n      data.me.cart.push(cartItem)\r\n    } else {\r\n      //   data.me.cart.find(eachItem => eachItem.item.id === props.item.id)\r\n      //     .quantity++\r\n    }\r\n\r\n    cache.writeQuery({\r\n      query: CURRENT_USER_QUERY,\r\n      data: data\r\n    })\r\n  }\r\n\r\n  return (\r\n    <button onClick={addToCart}>Add to Cart ðŸ›’</button>\r\n\r\n    // <Mutation\r\n    //   optimisticResponse={{\r\n    //     __typename: \"Mutation\",\r\n    //     addToCart: {\r\n    //       __typename: \"CartItem\",\r\n    //       id: props.item.id,\r\n    //       item: {\r\n    //         __typename: \"Item\",\r\n    //         description: props.item.description,\r\n    //         id: props.item.id,\r\n    //         image: props.item.image,\r\n    //         price: props.item.price,\r\n    //         title: props.item.title\r\n    //       },\r\n    //       quantity: 1\r\n    //     }\r\n    //   }}\r\n    //   update={update}\r\n    //   mutation={ADD_TO_CART_MUTATION}\r\n    //   refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n    //   variables={{ id: props.item.id }}\r\n    // >\r\n    //   {(addToCart, { data, error, loading }) => (\r\n    //     <button disabled={loading} onClick={addToCart}>\r\n    //       Add{loading && \"ing\"} to Cart ðŸ›’\r\n    //     </button>\r\n    //   )}\r\n    // </Mutation>\r\n  )\r\n}\r\n\r\nexport default AddToCart\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAeA;AAAA;AAEA;AAAA;AAEA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;;;;A","sourceRoot":""}