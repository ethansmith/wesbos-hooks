{"ast":null,"code":"import ApolloClient from 'apollo-boost';\nimport withApollo from 'next-with-apollo';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\nimport { LOCAL_BACKEND_URL, PROD_BACKEND_URL } from '../config';\n\nfunction createClient({\n  headers\n}) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? LOCAL_BACKEND_URL : PROD_BACKEND_URL,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, {\n            cache\n          }) {\n            // read the cartOpen value from the cache\n            const {\n              cartOpen\n            } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }); // write the cart state to the opposite\n\n            const data = {\n              data: {\n                cartOpen: !cartOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/ethan/Sites/wpx/wesbos-hooks/frontend/lib/withData.js"],"names":["ApolloClient","withApollo","LOCAL_STATE_QUERY","LOCAL_BACKEND_URL","PROD_BACKEND_URL","createClient","headers","uri","process","env","NODE_ENV","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleCart","_","variables","cache","cartOpen","readQuery","query","data","writeData","defaults"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,WAApD;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AACjC,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,GAAG,EACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIP,iBADJ,GAEIC,gBAJgB;AAKtBO,IAAAA,OAAO,EAAEC,SAAS,IAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBT,QAAAA;AAJmB,OAArB;AAMD,KAZqB;AAatB;AACAU,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,CAACC,CAAD,EAAIC,SAAJ,EAAe;AAAEC,YAAAA;AAAF,WAAf,EAA0B;AAClC;AACA,kBAAM;AAAEC,cAAAA;AAAF,gBAAeD,KAAK,CAACE,SAAN,CAAgB;AACnCC,cAAAA,KAAK,EAAEvB;AAD4B,aAAhB,CAArB,CAFkC,CAMlC;;AAEA,kBAAMwB,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AAAEH,gBAAAA,QAAQ,EAAE,CAACA;AAAb;AADK,aAAb;AAIAD,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AAEA,mBAAOA,IAAP;AACD;;AAhBO;AADD,OADA;AAqBXE,MAAAA,QAAQ,EAAE;AACRL,QAAAA,QAAQ,EAAE;AADF;AArBC;AAdS,GAAjB,CAAP;AAwCD;;AAED,eAAetB,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import ApolloClient from 'apollo-boost';\nimport withApollo from 'next-with-apollo';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\nimport { LOCAL_BACKEND_URL, PROD_BACKEND_URL } from '../config';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri:\n      process.env.NODE_ENV === 'development'\n        ? LOCAL_BACKEND_URL\n        : PROD_BACKEND_URL,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n\n            // write the cart state to the opposite\n\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n\n            cache.writeData(data);\n\n            return data;\n          },\n        },\n      },\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}