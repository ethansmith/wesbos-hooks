{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.01e29d1be8aef3fc4fa0.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import { Mutation } from \"react-apollo\"\r\nimport gql from \"graphql-tag\"\r\nimport Router from \"next/router\"\r\nimport Form from \"./styles/Form\"\r\nimport formatMoney from \"../lib/formatMoney\"\r\nimport { useState } from \"react\"\r\nimport ErrorMessage from \"./ErrorMessage\"\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $price: Int!\r\n    $image: String\r\n    $largeImage: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      price: $price\r\n      image: $image\r\n      largeImage: $largeImage\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst CreateItem = props => {\r\n  const [theTitle, setTheTitle] = useState(\"\")\r\n  const [thePrice, setThePrice] = useState(\"\")\r\n  const [theDescription, setTheDescription] = useState(\"\")\r\n  const [theImage, setTheImage] = useState(\"\")\r\n  const [theLargeImage, setTheLargeImage] = useState(\"\")\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const uploadFile = async e => {\r\n    const data = new FormData()\r\n\r\n    data.append(\"file\", e.target.files[0])\r\n    data.append(\"upload_preset\", \"sickfits\")\r\n\r\n    setUploading(true)\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/dxegnq95q/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    )\r\n\r\n    const theFile = await res.json()\r\n\r\n    console.log(theFile)\r\n\r\n    setUploading(false)\r\n\r\n    setTheImage(theFile.secure_url)\r\n\r\n    setTheLargeImage(theFile.eager[0].secure_url)\r\n  }\r\n\r\n  return (\r\n    <Mutation mutation={CREATE_ITEM_MUTATION}>\r\n      {(createItem, { loading, error }) => (\r\n        <Form\r\n          onSubmit={async e => {\r\n            // Stop the form from submitting\r\n            e.preventDefault()\r\n            // call the mutation\r\n            const res = await createItem({\r\n              variables: {\r\n                title: theTitle,\r\n                price: parseInt(thePrice),\r\n                description: theDescription,\r\n                image: theImage,\r\n                largeImage: theLargeImage\r\n              }\r\n            })\r\n            // change them to the single item page\r\n            console.log(res)\r\n            Router.push({\r\n              pathname: \"/item\",\r\n              query: { id: res.data.createItem.id }\r\n            })\r\n          }}\r\n        >\r\n          <ErrorMessage error={error} />\r\n\r\n          <fieldset disabled={loading} aria-busy={loading}>\r\n            <label htmlFor=\"file\">\r\n              Image\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                required\r\n                onChange={e => uploadFile(e)}\r\n              />\r\n              {uploading && <p>Uploading...</p>}\r\n              {theImage && (\r\n                <img width=\"200\" src={theImage} alt=\"Upload Preview\" />\r\n              )}\r\n            </label>\r\n\r\n            <label htmlFor=\"title\">\r\n              Title\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n                autoComplete=\"off\"\r\n                required\r\n                value={theTitle}\r\n                onChange={e => setTheTitle(e.target.value)}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"Price\">\r\n              Price\r\n              <input\r\n                type=\"number\"\r\n                id=\"Price\"\r\n                name=\"Price\"\r\n                placeholder=\"Price\"\r\n                required\r\n                value={thePrice}\r\n                onChange={e => setThePrice(e.target.value)}\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"Description\">\r\n              Description\r\n              <textarea\r\n                id=\"Description\"\r\n                name=\"Description\"\r\n                placeholder=\"Enter a Description\"\r\n                required\r\n                value={theDescription}\r\n                onChange={e => setTheDescription(e.target.value)}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Submit!</button>\r\n          </fieldset>\r\n        </Form>\r\n      )}\r\n    </Mutation>\r\n  )\r\n}\r\n\r\nexport default CreateItem\r\n\r\nexport { CREATE_ITEM_MUTATION }\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AANA;AAAA;AAWA;AACA;AAFA;AACA;AAXA;AAQA;AARA;AAAA;AACA;AADA;AAgBA;AAEA;AAEA;AAEA;AAEA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA0BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AALA;AAIA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhFA;AAsFA;AACA;AACA;;;;;A","sourceRoot":""}