{"version":3,"file":"static/webpack/static\\development\\pages\\order.js.0a03d23cc4051f7231bf.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import { Query } from \"react-apollo\"\r\nimport moment from \"moment\"\r\nimport Head from \"next/head\"\r\nimport gql from \"graphql-tag\"\r\nimport formatMoney from \"../lib/formatMoney\"\r\nimport Error from \"./ErrorMessage\"\r\nimport OrderStyles from \"./styles/OrderStyles\"\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n  query($id: ID!) {\r\n    order(id: $id) {\r\n      id\r\n      items {\r\n        title\r\n        description\r\n        price\r\n        id\r\n        image\r\n        quantity\r\n      }\r\n      total\r\n      createdAt\r\n      user {\r\n        id\r\n      }\r\n      charge\r\n    }\r\n  }\r\n`\r\n\r\nconst Order = props => (\r\n  <Query query={SINGLE_ORDER_QUERY} variables={{ id: props.id }}>\r\n    {({ data, error, loading }) => {\r\n    //   if (error.message.contains('poo')) return <p>No order found with that ID!</p>\r\n      if (error) return <Error error={error} />\r\n      if (loading) return <p>loading</p>\r\n\r\n      console.log(\"data is\", data)\r\n\r\n      const { order } = data\r\n      return (\r\n        <OrderStyles>\r\n          <Head>\r\n            <title>Order {order.id}</title>\r\n          </Head>\r\n          <p>\r\n            <span>Order ID:</span>\r\n            <span>{props.id}</span>\r\n          </p>\r\n          <p>\r\n            <span>Order total:</span>\r\n            <span>{formatMoney(order.total)}</span>\r\n          </p>\r\n          <p>\r\n            <span>Charge ID:</span>\r\n            <span>{order.charge}</span>\r\n          </p>\r\n          <p>\r\n            <span>Created at: </span>\r\n            <span>{moment(order.createdAt).format(\"MMM Do YY [at] h:mm\")}</span>\r\n          </p>\r\n        </OrderStyles>\r\n      )\r\n    }}\r\n  </Query>\r\n)\r\n\r\nexport default Order\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqjCA;AACA;AAoCA;;;;A","sourceRoot":""}