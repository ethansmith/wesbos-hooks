{"version":3,"file":"static/webpack/static\\development\\pages\\item.js.342395b5bd590ddb21e3.hot-update.js","sources":["webpack:///./components/SingleItem.js"],"sourcesContent":["import gql from \"graphql-tag\"\r\n// import { Query } from \"react-apollo\"\r\nimport { useQuery } from \"react-apollo-hooks\"\r\n// import { useQuery } from \"@apollo/react-hooks\"\r\nimport Head from \"next/head\"\r\nimport Error from \"./ErrorMessage\"\r\nimport styled from \"styled-components\"\r\n\r\nconst SingleItemStyles = styled.div`\r\n  max-width: 1200px;\r\n  margin: 2rem auto;\r\n  box-shadow: ${props => props.theme.bs};\r\n  display: grid;\r\n  grid-auto-columns: 1fr;\r\n  grid-auto-flow: column;\r\n  min-height: 800px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n  .details {\r\n    margin: 3rem;\r\n    font-size: 2rem;\r\n  }\r\n`\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    item(where: { id: $id }) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`\r\n\r\nconst SingleItem = props => {\r\n  const { error, loading, data } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: { id: props.id },\r\n  })\r\n\r\n  if (error) return <Error error={error} />\r\n  if (loading) return <p>Loading...</p>\r\n  if (!data.item) return <p>No Item Found for {props.id}</p>\r\n  const item = data.item\r\n\r\n  console.log(item)\r\n\r\n  console.log(process.browser)\r\n\r\n  return (\r\n    <SingleItemStyles>\r\n      <Head>\r\n        <title>Sick Fits | {item.title}</title>\r\n      </Head>\r\n      <img src={item.largeImage} alt={item.title} />\r\n      <div className=\"details\">\r\n        <h2>Viewing {item.title}</h2>\r\n        <p>{item.description}</p>\r\n      </div>\r\n    </SingleItemStyles>\r\n  )\r\n}\r\n\r\nexport default SingleItem\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAgBA;AACA;AAYA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}