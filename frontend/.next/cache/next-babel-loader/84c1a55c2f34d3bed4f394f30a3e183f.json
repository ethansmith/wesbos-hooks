{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ethan/Sites/wpx/wesbos-hooks/frontend/components/Search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\\n    items(\\n      where: {\\n        OR: [\\n          { title_contains: $searchTerm }\\n          { description_contains: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      id\\n      image\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport debounce from \"lodash.debounce\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nvar SEARCH_ITEMS_QUERY = gql(_templateObject());\n\nvar routeToItem = function routeToItem(item) {\n  Router.push({\n    pathname: '/item',\n    query: {\n      id: item.id\n    }\n  });\n};\n\nvar AutoComplete = function AutoComplete(props) {\n  var _useState = useState([]),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _onChange = debounce(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e, client) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true); // manually query apollo client\n\n              _context.next = 3;\n              return client.query({\n                query: SEARCH_ITEMS_QUERY,\n                variables: {\n                  searchTerm: e.target.value\n                }\n              });\n\n            case 3:\n              res = _context.sent;\n              setItems(res.data.items);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), 100);\n\n  resetIdCounter();\n  return __jsx(SearchStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Downshift, {\n    onChange: routeToItem,\n    itemToString: function itemToString(item) {\n      return item === null ? \"\" : item.title;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, function (_ref2) {\n    var getInputProps = _ref2.getInputProps,\n        getItemProps = _ref2.getItemProps,\n        isOpen = _ref2.isOpen,\n        inputValue = _ref2.inputValue,\n        highlightedIndex = _ref2.highlightedIndex;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(ApolloConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, function (client) {\n      return __jsx(\"input\", _extends({}, getInputProps({\n        type: \"search\",\n        placeholder: \"Search for An Item\",\n        id: \"search\",\n        className: loading ? \"loading\" : \"\",\n        onChange: function onChange(e) {\n          e.persist();\n\n          _onChange(e, client);\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }), isOpen && __jsx(DropDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, items.map(function (item, index) {\n      return __jsx(DropDownItem, _extends({}, getItemProps({\n        item: item\n      }), {\n        key: item.id,\n        highlighted: index === highlightedIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), __jsx(\"img\", {\n        width: \"50\",\n        src: item.image,\n        alt: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, item.title));\n    }), !items.length && loading === false && __jsx(DropDownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Nothing found for \", inputValue)));\n  }));\n};\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/ethan/Sites/wpx/wesbos-hooks/frontend/components/Search.js"],"names":["useState","Downshift","resetIdCounter","ApolloConsumer","debounce","gql","Router","DropDown","DropDownItem","SearchStyles","SEARCH_ITEMS_QUERY","routeToItem","item","push","pathname","query","id","AutoComplete","props","items","setItems","loading","setLoading","onChange","e","client","variables","searchTerm","target","value","res","data","title","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","type","placeholder","className","persist","map","index","image","length"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport Downshift, {resetIdCounter} from \"downshift\"\nimport { ApolloConsumer } from \"react-apollo\"\nimport debounce from \"lodash.debounce\"\nimport gql from \"graphql-tag\"\nimport Router from \"next/router\"\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\"\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`\n\nconst routeToItem = item => {\n    Router.push({\n        pathname: '/item',\n        query: {\n            id: item.id\n        }\n    })\n}\n\nconst AutoComplete = props => {\n  const [items, setItems] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  const onChange = debounce(async (e, client) => {\n    setLoading(true)\n\n    // manually query apollo client\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value }\n    })\n    setItems(res.data.items)\n    setLoading(false)\n  }, 100)\n  \n  resetIdCounter()\n  return (\n    <SearchStyles>\n      <Downshift onChange={routeToItem} itemToString={item => (item === null) ? \"\" : item.title}>\n        {({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue,\n          highlightedIndex\n        }) => (\n          <div>\n            <ApolloConsumer>\n              {client => (\n                <input\n                  {...getInputProps({\n                    type: \"search\",\n                    placeholder: \"Search for An Item\",\n                    id: \"search\",\n                    className: loading ? \"loading\" : \"\",\n                    onChange: e => {\n                      e.persist()\n                      onChange(e, client)\n                    }\n                  })}\n                />\n              )}\n            </ApolloConsumer>\n            {isOpen && (\n              <DropDown>\n                {items.map((item, index) => (\n                  <DropDownItem \n                  {...getItemProps({item})}\n                  key={item.id} highlighted={index === highlightedIndex}>\n                    <img width=\"50\" src={item.image} alt={item.title} />\n                    <p>{item.title}</p>\n                  </DropDownItem>\n                ))}\n                {!items.length && (loading === false) && <DropDownItem>Nothing found for {inputValue}</DropDownItem>}\n              </DropDown>\n            )}\n          </div>\n        )}\n      </Downshift>\n    </SearchStyles>\n  )\n}\n\nexport default AutoComplete\n"]},"metadata":{},"sourceType":"module"}