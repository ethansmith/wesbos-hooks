{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Sites/wpx/wesbos-hooks-now/frontend/components/AddToCart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(id: $id) {\n      id\n      item {\n        description\n        id\n        image\n        price\n        title\n      }\n      quantity\n    }\n  }\n`;\n\nconst AddToCart = props => {\n  const update = (cache, payload) => {\n    const data = cache.readQuery({\n      query: CURRENT_USER_QUERY\n    });\n    const cartItem = payload.data.addToCart;\n\n    if (!data.me.cart.find(eachItem => eachItem.item.id === props.item.id)) {\n      cartItem.quantity = 1;\n      data.me.cart.push(cartItem);\n    } else {//   data.me.cart.find(eachItem => eachItem.item.id === props.item.id)\n      //     .quantity++\n    }\n\n    cache.writeQuery({\n      query: CURRENT_USER_QUERY,\n      data: data\n    });\n  };\n\n  return __jsx(Mutation, {\n    optimisticResponse: {\n      __typename: \"Mutation\",\n      addToCart: {\n        __typename: \"CartItem\",\n        id: props.item.id,\n        item: {\n          __typename: \"Item\",\n          description: props.item.description,\n          id: props.item.id,\n          image: props.item.image,\n          price: props.item.price,\n          title: props.item.title\n        },\n        quantity: 1\n      }\n    },\n    update: update,\n    mutation: ADD_TO_CART_MUTATION,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    variables: {\n      id: props.item.id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, (addToCart, {\n    data,\n    error,\n    loading\n  }) => __jsx(\"button\", {\n    disabled: loading,\n    onClick: addToCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add\", loading && \"ing\", \" to Cart \\uD83D\\uDED2\"));\n};\n\nexport default AddToCart;","map":{"version":3,"sources":["/Users/ethan/Sites/wpx/wesbos-hooks-now/frontend/components/AddToCart.js"],"names":["Mutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","props","update","cache","payload","data","readQuery","query","cartItem","addToCart","me","cart","find","eachItem","item","id","quantity","push","writeQuery","__typename","description","image","price","title","error","loading"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,MAAMC,oBAAoB,GAAGF,GAAI;;;;;;;;;;;;;;CAAjC;;AAgBA,MAAMG,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACjC,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,MAAAA,KAAK,EAAET;AAAT,KAAhB,CAAb;AAEA,UAAMU,QAAQ,GAAGJ,OAAO,CAACC,IAAR,CAAaI,SAA9B;;AAEA,QAAI,CAACJ,IAAI,CAACK,EAAL,CAAQC,IAAR,CAAaC,IAAb,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,EAAd,KAAqBd,KAAK,CAACa,IAAN,CAAWC,EAA9D,CAAL,EAAwE;AACtEP,MAAAA,QAAQ,CAACQ,QAAT,GAAoB,CAApB;AACAX,MAAAA,IAAI,CAACK,EAAL,CAAQC,IAAR,CAAaM,IAAb,CAAkBT,QAAlB;AACD,KAHD,MAKK,CACL;AACA;AACC;;AAEDL,IAAAA,KAAK,CAACe,UAAN,CAAiB;AACfX,MAAAA,KAAK,EAAET,kBADQ;AAEfO,MAAAA,IAAI,EAAEA;AAFS,KAAjB;AAID,GAnBD;;AAqBA,SACE,MAAC,QAAD;AACE,IAAA,kBAAkB,EAAE;AAClBc,MAAAA,UAAU,EAAE,UADM;AAElBV,MAAAA,SAAS,EAAE;AACTU,QAAAA,UAAU,EAAE,UADH;AAETJ,QAAAA,EAAE,EAAEd,KAAK,CAACa,IAAN,CAAWC,EAFN;AAGTD,QAAAA,IAAI,EAAE;AACJK,UAAAA,UAAU,EAAE,MADR;AAEJC,UAAAA,WAAW,EAAEnB,KAAK,CAACa,IAAN,CAAWM,WAFpB;AAGJL,UAAAA,EAAE,EAAEd,KAAK,CAACa,IAAN,CAAWC,EAHX;AAIJM,UAAAA,KAAK,EAAEpB,KAAK,CAACa,IAAN,CAAWO,KAJd;AAKJC,UAAAA,KAAK,EAAErB,KAAK,CAACa,IAAN,CAAWQ,KALd;AAMJC,UAAAA,KAAK,EAAEtB,KAAK,CAACa,IAAN,CAAWS;AANd,SAHG;AAWTP,QAAAA,QAAQ,EAAE;AAXD;AAFO,KADtB;AAiBE,IAAA,MAAM,EAAEd,MAjBV;AAkBE,IAAA,QAAQ,EAAEH,oBAlBZ;AAmBE,IAAA,cAAc,EAAE,CAAC;AAAEQ,MAAAA,KAAK,EAAET;AAAT,KAAD,CAnBlB;AAoBE,IAAA,SAAS,EAAE;AAAEiB,MAAAA,EAAE,EAAEd,KAAK,CAACa,IAAN,CAAWC;AAAjB,KApBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBG,CAACN,SAAD,EAAY;AAAEJ,IAAAA,IAAF;AAAQmB,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAZ,KACC;AAAQ,IAAA,QAAQ,EAAEA,OAAlB;AAA2B,IAAA,OAAO,EAAEhB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMgB,OAAO,IAAI,KADjB,0BAvBJ,CADF;AA8BD,CApDD;;AAsDA,eAAezB,SAAf","sourcesContent":["import { Mutation } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport { CURRENT_USER_QUERY } from \"./User\"\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(id: $id) {\n      id\n      item {\n        description\n        id\n        image\n        price\n        title\n      }\n      quantity\n    }\n  }\n`\n\nconst AddToCart = props => {\n  const update = (cache, payload) => {\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY })\n\n    const cartItem = payload.data.addToCart\n\n    if (!data.me.cart.find(eachItem => eachItem.item.id === props.item.id)) {\n      cartItem.quantity = 1\n      data.me.cart.push(cartItem)\n    } \n    \n    else {\n    //   data.me.cart.find(eachItem => eachItem.item.id === props.item.id)\n    //     .quantity++\n    }\n\n    cache.writeQuery({\n      query: CURRENT_USER_QUERY,\n      data: data\n    })\n  }\n\n  return (\n    <Mutation\n      optimisticResponse={{\n        __typename: \"Mutation\",\n        addToCart: {\n          __typename: \"CartItem\",\n          id: props.item.id,\n          item: {\n            __typename: \"Item\",\n            description: props.item.description,\n            id: props.item.id,\n            image: props.item.image,\n            price: props.item.price,\n            title: props.item.title\n          },\n          quantity: 1\n        }\n      }}\n      update={update}\n      mutation={ADD_TO_CART_MUTATION}\n      refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      variables={{ id: props.item.id }}\n    >\n      {(addToCart, { data, error, loading }) => (\n        <button disabled={loading} onClick={addToCart}>\n          Add{loading && \"ing\"} to Cart ðŸ›’\n        </button>\n      )}\n    </Mutation>\n  )\n}\n\nexport default AddToCart\n"]},"metadata":{},"sourceType":"module"}