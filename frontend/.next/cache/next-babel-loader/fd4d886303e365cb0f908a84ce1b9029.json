{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ethan/Sites/wpx/wesbos-hooks-now/frontend/components/SingleItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    item(where: { id: $id }) {\\n      id\\n      title\\n      price\\n      description\\n      image\\n      largeImage\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Head from 'next/head'; // import { useQuery } from 'react-apollo';\n// For some reason the useQuery func from @apollo/react-hooks does not find the client prop... but it works via the react-apollo-hooks pkg\n\nimport { useQuery } from 'react-apollo-hooks';\nimport styled from 'styled-components';\nimport Error from './ErrorMessage';\nvar SingleItemStyles = styled.div.withConfig({\n  displayName: \"SingleItem__SingleItemStyles\",\n  componentId: \"mflgtv-0\"\n})([\"max-width:1200px;margin:2rem auto;box-shadow:\", \";display:grid;grid-auto-columns:1fr;grid-auto-flow:column;min-height:800px;img{width:100%;height:100%;object-fit:contain;}.details{margin:3rem;font-size:2rem;}\"], function (props) {\n  return props.theme.bs;\n});\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\n\nvar SingleItem = function SingleItem(props) {\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: props.id\n    }\n  }),\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (error) return __jsx(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Loading...\");\n  if (!data.item) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"No Item Found for \", props.id);\n  var item = data.item;\n  console.log(item);\n  console.log(process.browser);\n  return __jsx(SingleItemStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sick Fits | \", item.title)), __jsx(\"img\", {\n    src: item.largeImage,\n    alt: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Viewing \", item.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, item.description)));\n};\n\nexport default SingleItem;","map":{"version":3,"sources":["/Users/ethan/Sites/wpx/wesbos-hooks-now/frontend/components/SingleItem.js"],"names":["gql","Head","useQuery","styled","Error","SingleItemStyles","div","props","theme","bs","SINGLE_ITEM_QUERY","SingleItem","variables","id","error","loading","data","item","console","log","process","browser","title","largeImage","description"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yNAGN,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,EAAhB;AAAA,CAHC,CAAtB;AAmBA,IAAMC,iBAAiB,GAAGV,GAAH,mBAAvB;;AAaA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAAJ,KAAK,EAAI;AAAA,kBACOL,QAAQ,CAACQ,iBAAD,EAAoB;AAC3DE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN,KAAK,CAACM;AAAZ;AADgD,GAApB,CADf;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACXC,OADW,aACXA,OADW;AAAA,MACFC,IADE,aACFA,IADE;;AAK1B,MAAIF,KAAJ,EAAW,OAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAI,CAACC,IAAI,CAACC,IAAV,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBV,KAAK,CAACM,EAA5B,CAAP;AAPU,MAQlBI,IARkB,GAQTD,IARS,CAQlBC,IARkB;AAU1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,OAApB;AAEA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoBJ,IAAI,CAACK,KAAzB,CADF,CADF,EAIE;AAAK,IAAA,GAAG,EAAEL,IAAI,CAACM,UAAf;AAA2B,IAAA,GAAG,EAAEN,IAAI,CAACK,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaL,IAAI,CAACK,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACO,WAAT,CAFF,CALF,CADF;AAYD,CA1BD;;AA4BA,eAAeb,UAAf","sourcesContent":["// import { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\n// import { useQuery } from 'react-apollo';\n// For some reason the useQuery func from @apollo/react-hooks does not find the client prop... but it works via the react-apollo-hooks pkg\nimport { useQuery } from 'react-apollo-hooks';\nimport styled from 'styled-components';\nimport Error from './ErrorMessage';\n\nconst SingleItemStyles = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  box-shadow: ${props => props.theme.bs};\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 3rem;\n    font-size: 2rem;\n  }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst SingleItem = props => {\n  const { error, loading, data } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: { id: props.id },\n  });\n\n  if (error) return <Error error={error} />;\n  if (loading) return <p>Loading...</p>;\n  if (!data.item) return <p>No Item Found for {props.id}</p>;\n  const { item } = data;\n\n  console.log(item);\n\n  console.log(process.browser);\n\n  return (\n    <SingleItemStyles>\n      <Head>\n        <title>Sick Fits | {item.title}</title>\n      </Head>\n      <img src={item.largeImage} alt={item.title} />\n      <div className=\"details\">\n        <h2>Viewing {item.title}</h2>\n        <p>{item.description}</p>\n      </div>\n    </SingleItemStyles>\n  );\n};\n\nexport default SingleItem;\n"]},"metadata":{},"sourceType":"module"}